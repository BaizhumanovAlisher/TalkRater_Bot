version: '3.8'

services:
  talk_rater_db:
    container_name: "talk_rater_postgresql"
    image: postgres:16.2-alpine3.19
    restart: always
    ports:
      - "9000:5432"
    environment:
      POSTGRES_USER: telegram_bot
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password

      POSTGRES_DB: talk_rater_db
    networks:
      - backend
    volumes:
      - talk_rater_data:/var/lib/postgresql/data
    secrets:
      - db_password

  talk_rater_bot:
    depends_on:
      - talk_rater_db
      - prometheus
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DB_PASSWORD_FILE: /run/secrets/db_password
      TG_API_TOKEN_USER_FILE: /run/secrets/tg_api_token_user
      TG_API_TOKEN_ADMIN_FILE: /run/secrets/tg_api_token_admin
      CONFIG_PATH_TG_BOT: /run/configs/config
    restart: unless-stopped
    networks:
      - backend
    configs:
      - config
    secrets:
      - db_password
      - tg_api_token_admin
      - tg_api_token_user

  prometheus:
    image: docker.io/prom/prometheus:v2.51.2
    container_name: prometheus
    ports:
      - "9090:9090"
    command: "--config.file=/etc/prometheus/prometheus.yaml"
    volumes:
      - ./config/prometheus.yaml:/etc/prometheus/prometheus.yaml:ro
      - prometheus-data:/prometheus
    restart: unless-stopped
    networks:
      - backend

  grafana:
    depends_on:
      - prometheus
    image: docker.io/grafana/grafana-oss:10.4.2
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - backend

configs:
  config:
    file: ./config/local.yaml

secrets:
  db_password:
    file: ./secrets/db_password.txt
  tg_api_token_admin:
    file: ./secrets/tg_api_token_admin.txt
  tg_api_token_user:
    file: ./secrets/tg_api_token_user.txt

networks:
  backend:
    driver: bridge
  output_world:
    driver: host

volumes:
  talk_rater_data:
    driver: local
  grafana-data:
    driver: local
  prometheus-data:
    driver: local
